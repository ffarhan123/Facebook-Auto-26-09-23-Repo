<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="18" passed="16" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-28T15:51:42 IST" name="RegressionSuiteParallel-tests/classes" finished-at="2023-10-28T15:54:28 IST" duration-ms="165653">
    <groups>
    </groups>
    <test started-at="2023-10-28T15:51:42 IST" name="ChromeTest" finished-at="2023-10-28T15:52:55 IST" duration-ms="72894">
      <class name="tests.VerifyForgottenPasswordPage">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:tests.VerifyForgottenPasswordPage@35ef1869]" started-at="2023-10-28T15:51:42 IST" name="openBrowser" finished-at="2023-10-28T15:51:47 IST" duration-ms="4187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="createPomObject()[pri:0, instance:tests.VerifyForgottenPasswordPage@35ef1869]" started-at="2023-10-28T15:51:54 IST" name="createPomObject" finished-at="2023-10-28T15:51:54 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPomObject -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@35ef1869]" started-at="2023-10-28T15:51:54 IST" name="goToForgottenPasswordPage" finished-at="2023-10-28T15:52:09 IST" duration-ms="14269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifyForgottenPasswordPageTitleMessage()[pri:0, instance:tests.VerifyForgottenPasswordPage@35ef1869]" started-at="2023-10-28T15:52:09 IST" name="verifyForgottenPasswordPageTitleMessage" finished-at="2023-10-28T15:52:10 IST" duration-ms="1120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgottenPasswordPageTitleMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@35ef1869]" started-at="2023-10-28T15:52:10 IST" name="afterMethod" finished-at="2023-10-28T15:52:10 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyForgottenPasswordPageTitleMessage status=SUCCESS method=VerifyForgottenPasswordPage.verifyForgottenPasswordPageTitleMessage()[pri:0, instance:tests.VerifyForgottenPasswordPage@35ef1869] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@35ef1869]" started-at="2023-10-28T15:52:10 IST" name="goToForgottenPasswordPage" finished-at="2023-10-28T15:52:19 IST" duration-ms="9441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifyCancelButton()[pri:1, instance:tests.VerifyForgottenPasswordPage@35ef1869]" started-at="2023-10-28T15:52:19 IST" name="verifyCancelButton" finished-at="2023-10-28T15:52:25 IST" duration-ms="5547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@35ef1869]" started-at="2023-10-28T15:52:25 IST" name="afterMethod" finished-at="2023-10-28T15:52:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButton status=SUCCESS method=VerifyForgottenPasswordPage.verifyCancelButton()[pri:1, instance:tests.VerifyForgottenPasswordPage@35ef1869] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@35ef1869]" started-at="2023-10-28T15:52:25 IST" name="goToForgottenPasswordPage" finished-at="2023-10-28T15:52:33 IST" duration-ms="7801" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifySearcButton()[pri:2, instance:tests.VerifyForgottenPasswordPage@35ef1869]" started-at="2023-10-28T15:52:33 IST" name="verifySearcButton" finished-at="2023-10-28T15:52:38 IST" duration-ms="5034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearcButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@35ef1869]" started-at="2023-10-28T15:52:38 IST" name="afterMethod" finished-at="2023-10-28T15:52:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearcButton status=SUCCESS method=VerifyForgottenPasswordPage.verifySearcButton()[pri:2, instance:tests.VerifyForgottenPasswordPage@35ef1869] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObjects()[pri:0, instance:tests.VerifyForgottenPasswordPage@35ef1869]" started-at="2023-10-28T15:52:38 IST" name="clearObjects" finished-at="2023-10-28T15:52:38 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObjects -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyForgottenPasswordPage@35ef1869]" started-at="2023-10-28T15:52:55 IST" name="closeBrowser" finished-at="2023-10-28T15:52:55 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.VerifyForgottenPasswordPage -->
      <class name="tests.VerifyLoginPage">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:tests.VerifyLoginPage@243c4f91]" started-at="2023-10-28T15:51:47 IST" name="openBrowser" finished-at="2023-10-28T15:51:54 IST" duration-ms="7883" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="createPomObject()[pri:0, instance:tests.VerifyLoginPage@243c4f91]" started-at="2023-10-28T15:51:54 IST" name="createPomObject" finished-at="2023-10-28T15:51:55 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPomObject -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@243c4f91]" started-at="2023-10-28T15:51:55 IST" name="goToLoginPage" finished-at="2023-10-28T15:52:00 IST" duration-ms="5622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingCorrectEmailOnly()[pri:0, instance:tests.VerifyLoginPage@243c4f91]" started-at="2023-10-28T15:52:00 IST" name="verifyTheLoginButtonByPassingCorrectEmailOnly" finished-at="2023-10-28T15:52:10 IST" duration-ms="10254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingCorrectEmailOnly -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@243c4f91]" started-at="2023-10-28T15:52:10 IST" name="afterMethod" finished-at="2023-10-28T15:52:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingCorrectEmailOnly status=SUCCESS method=VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailOnly()[pri:0, instance:tests.VerifyLoginPage@243c4f91] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@243c4f91]" started-at="2023-10-28T15:52:10 IST" name="goToLoginPage" finished-at="2023-10-28T15:52:13 IST" duration-ms="2305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingBlankEmailPassword()[pri:1, instance:tests.VerifyLoginPage@243c4f91]" started-at="2023-10-28T15:52:13 IST" name="verifyTheLoginButtonByPassingBlankEmailPassword" finished-at="2023-10-28T15:52:17 IST" duration-ms="4674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingBlankEmailPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@243c4f91]" started-at="2023-10-28T15:52:17 IST" name="afterMethod" finished-at="2023-10-28T15:52:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingBlankEmailPassword status=SUCCESS method=VerifyLoginPage.verifyTheLoginButtonByPassingBlankEmailPassword()[pri:1, instance:tests.VerifyLoginPage@243c4f91] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@243c4f91]" started-at="2023-10-28T15:52:17 IST" name="goToLoginPage" finished-at="2023-10-28T15:52:19 IST" duration-ms="1760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingCorrectEmailPassword()[pri:2, instance:tests.VerifyLoginPage@243c4f91]" started-at="2023-10-28T15:52:19 IST" name="verifyTheLoginButtonByPassingCorrectEmailPassword" finished-at="2023-10-28T15:52:55 IST" duration-ms="35913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingCorrectEmailPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@243c4f91]" started-at="2023-10-28T15:52:55 IST" name="afterMethod" finished-at="2023-10-28T15:52:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingCorrectEmailPassword status=SUCCESS method=VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailPassword()[pri:2, instance:tests.VerifyLoginPage@243c4f91] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObjects()[pri:0, instance:tests.VerifyLoginPage@243c4f91]" started-at="2023-10-28T15:52:55 IST" name="clearObjects" finished-at="2023-10-28T15:52:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObjects -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyLoginPage@243c4f91]" started-at="2023-10-28T15:52:55 IST" name="closeBrowser" finished-at="2023-10-28T15:52:55 IST" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.VerifyLoginPage -->
    </test> <!-- ChromeTest -->
    <test started-at="2023-10-28T15:51:42 IST" name="EdgeTest" finished-at="2023-10-28T15:52:57 IST" duration-ms="74141">
      <class name="tests.VerifyForgottenPasswordPage">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:tests.VerifyForgottenPasswordPage@694abbdc]" started-at="2023-10-28T15:51:42 IST" name="openBrowser" finished-at="2023-10-28T15:51:47 IST" duration-ms="4998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="createPomObject()[pri:0, instance:tests.VerifyForgottenPasswordPage@694abbdc]" started-at="2023-10-28T15:51:53 IST" name="createPomObject" finished-at="2023-10-28T15:51:53 IST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPomObject -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@694abbdc]" started-at="2023-10-28T15:51:53 IST" name="goToForgottenPasswordPage" finished-at="2023-10-28T15:52:18 IST" duration-ms="25140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifyForgottenPasswordPageTitleMessage()[pri:0, instance:tests.VerifyForgottenPasswordPage@694abbdc]" started-at="2023-10-28T15:52:18 IST" name="verifyForgottenPasswordPageTitleMessage" finished-at="2023-10-28T15:52:18 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgottenPasswordPageTitleMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@694abbdc]" started-at="2023-10-28T15:52:18 IST" name="afterMethod" finished-at="2023-10-28T15:52:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyForgottenPasswordPageTitleMessage status=SUCCESS method=VerifyForgottenPasswordPage.verifyForgottenPasswordPageTitleMessage()[pri:0, instance:tests.VerifyForgottenPasswordPage@694abbdc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@694abbdc]" started-at="2023-10-28T15:52:18 IST" name="goToForgottenPasswordPage" finished-at="2023-10-28T15:52:27 IST" duration-ms="8401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifyCancelButton()[pri:1, instance:tests.VerifyForgottenPasswordPage@694abbdc]" started-at="2023-10-28T15:52:27 IST" name="verifyCancelButton" finished-at="2023-10-28T15:52:33 IST" duration-ms="6581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@694abbdc]" started-at="2023-10-28T15:52:33 IST" name="afterMethod" finished-at="2023-10-28T15:52:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButton status=SUCCESS method=VerifyForgottenPasswordPage.verifyCancelButton()[pri:1, instance:tests.VerifyForgottenPasswordPage@694abbdc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@694abbdc]" started-at="2023-10-28T15:52:33 IST" name="goToForgottenPasswordPage" finished-at="2023-10-28T15:52:41 IST" duration-ms="7778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifySearcButton()[pri:2, instance:tests.VerifyForgottenPasswordPage@694abbdc]" started-at="2023-10-28T15:52:41 IST" name="verifySearcButton" finished-at="2023-10-28T15:52:45 IST" duration-ms="4311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearcButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@694abbdc]" started-at="2023-10-28T15:52:45 IST" name="afterMethod" finished-at="2023-10-28T15:52:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearcButton status=SUCCESS method=VerifyForgottenPasswordPage.verifySearcButton()[pri:2, instance:tests.VerifyForgottenPasswordPage@694abbdc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObjects()[pri:0, instance:tests.VerifyForgottenPasswordPage@694abbdc]" started-at="2023-10-28T15:52:45 IST" name="clearObjects" finished-at="2023-10-28T15:52:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObjects -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyForgottenPasswordPage@694abbdc]" started-at="2023-10-28T15:52:51 IST" name="closeBrowser" finished-at="2023-10-28T15:52:56 IST" duration-ms="4528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.VerifyForgottenPasswordPage -->
      <class name="tests.VerifyLoginPage">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:tests.VerifyLoginPage@2e005c4b]" started-at="2023-10-28T15:51:47 IST" name="openBrowser" finished-at="2023-10-28T15:51:53 IST" duration-ms="5576" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="createPomObject()[pri:0, instance:tests.VerifyLoginPage@2e005c4b]" started-at="2023-10-28T15:51:53 IST" name="createPomObject" finished-at="2023-10-28T15:51:53 IST" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPomObject -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@2e005c4b]" started-at="2023-10-28T15:51:53 IST" name="goToLoginPage" finished-at="2023-10-28T15:52:07 IST" duration-ms="13912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingCorrectEmailOnly()[pri:0, instance:tests.VerifyLoginPage@2e005c4b]" started-at="2023-10-28T15:52:07 IST" name="verifyTheLoginButtonByPassingCorrectEmailOnly" finished-at="2023-10-28T15:52:24 IST" duration-ms="16905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingCorrectEmailOnly -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@2e005c4b]" started-at="2023-10-28T15:52:24 IST" name="afterMethod" finished-at="2023-10-28T15:52:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingCorrectEmailOnly status=SUCCESS method=VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailOnly()[pri:0, instance:tests.VerifyLoginPage@2e005c4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@2e005c4b]" started-at="2023-10-28T15:52:24 IST" name="goToLoginPage" finished-at="2023-10-28T15:52:27 IST" duration-ms="2663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingBlankEmailPassword()[pri:1, instance:tests.VerifyLoginPage@2e005c4b]" started-at="2023-10-28T15:52:27 IST" name="verifyTheLoginButtonByPassingBlankEmailPassword" finished-at="2023-10-28T15:52:30 IST" duration-ms="3121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingBlankEmailPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@2e005c4b]" started-at="2023-10-28T15:52:30 IST" name="afterMethod" finished-at="2023-10-28T15:52:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingBlankEmailPassword status=SUCCESS method=VerifyLoginPage.verifyTheLoginButtonByPassingBlankEmailPassword()[pri:1, instance:tests.VerifyLoginPage@2e005c4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@2e005c4b]" started-at="2023-10-28T15:52:30 IST" name="goToLoginPage" finished-at="2023-10-28T15:52:33 IST" duration-ms="2803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingCorrectEmailPassword()[pri:2, instance:tests.VerifyLoginPage@2e005c4b]" started-at="2023-10-28T15:52:33 IST" name="verifyTheLoginButtonByPassingCorrectEmailPassword" finished-at="2023-10-28T15:52:50 IST" duration-ms="17792" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <div class="x1rg5ohu x1n2onr6 x3ajldb x1ja2u2z">...</div> is not clickable at point (1436, 28). Other element would receive the click: <div class="x1uvtmcs x4k7w5x x1h91t0o x1beo9mf xaigb6o x12ejxvf x3igimt xarpa2k xedcshv x1lytzrv x1t2pt76 x7ja8zs x1n2onr6 x1qrby5j x1jfb8zj" tabindex="-1">...</div>
  (Session info: MicrosoftEdge=118.0.2088.69)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-ADC0TJP', ip: '172.22.16.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 118.0.2088.69, fedcm:accounts: true, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:53712}, msedge: {msedgedriverVersion: 117.0.2045.55 (50f62b8a7655..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fe0a8102a8a0ed06d02d47a248674ded]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <div class="x1rg5ohu x1n2onr6 x3ajldb x1ja2u2z">...</div> is not clickable at point (1436, 28). Other element would receive the click: <div class="x1uvtmcs x4k7w5x x1h91t0o x1beo9mf xaigb6o x12ejxvf x3igimt xarpa2k xedcshv x1lytzrv x1t2pt76 x7ja8zs x1n2onr6 x1qrby5j x1jfb8zj" tabindex="-1">...</div>
  (Session info: MicrosoftEdge=118.0.2088.69)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-ADC0TJP', ip: '172.22.16.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 118.0.2088.69, fedcm:accounts: true, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:53712}, msedge: {msedgedriverVersion: 117.0.2045.55 (50f62b8a7655..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fe0a8102a8a0ed06d02d47a248674ded
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy19.click(Unknown Source)
at page.LoggedInHomePage.clickOnAccountLogo(LoggedInHomePage.java:35)
at tests.VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailPassword(VerifyLoginPage.java:144)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingCorrectEmailPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@2e005c4b]" started-at="2023-10-28T15:52:50 IST" name="afterMethod" finished-at="2023-10-28T15:52:51 IST" duration-ms="961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingCorrectEmailPassword status=FAILURE method=VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailPassword()[pri:2, instance:tests.VerifyLoginPage@2e005c4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObjects()[pri:0, instance:tests.VerifyLoginPage@2e005c4b]" started-at="2023-10-28T15:52:51 IST" name="clearObjects" finished-at="2023-10-28T15:52:51 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObjects -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyLoginPage@2e005c4b]" started-at="2023-10-28T15:52:56 IST" name="closeBrowser" finished-at="2023-10-28T15:52:57 IST" duration-ms="732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.VerifyLoginPage -->
    </test> <!-- EdgeTest -->
    <test started-at="2023-10-28T15:52:55 IST" name="FirefoxTest" finished-at="2023-10-28T15:54:28 IST" duration-ms="92703">
      <class name="tests.VerifyForgottenPasswordPage">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:51:42 IST" name="beforeSuite" finished-at="2023-10-28T15:51:42 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:52:55 IST" name="openBrowser" finished-at="2023-10-28T15:53:10 IST" duration-ms="14271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="createPomObject()[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:53:26 IST" name="createPomObject" finished-at="2023-10-28T15:53:26 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPomObject -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:53:26 IST" name="goToForgottenPasswordPage" finished-at="2023-10-28T15:53:36 IST" duration-ms="9221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifyForgottenPasswordPageTitleMessage()[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:53:36 IST" name="verifyForgottenPasswordPageTitleMessage" finished-at="2023-10-28T15:53:36 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgottenPasswordPageTitleMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:53:36 IST" name="afterMethod" finished-at="2023-10-28T15:53:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyForgottenPasswordPageTitleMessage status=SUCCESS method=VerifyForgottenPasswordPage.verifyForgottenPasswordPageTitleMessage()[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:53:36 IST" name="goToForgottenPasswordPage" finished-at="2023-10-28T15:53:43 IST" duration-ms="6950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifyCancelButton()[pri:1, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:53:43 IST" name="verifyCancelButton" finished-at="2023-10-28T15:53:48 IST" duration-ms="5907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:53:48 IST" name="afterMethod" finished-at="2023-10-28T15:53:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButton status=SUCCESS method=VerifyForgottenPasswordPage.verifyCancelButton()[pri:1, instance:tests.VerifyForgottenPasswordPage@359f7cdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:53:48 IST" name="goToForgottenPasswordPage" finished-at="2023-10-28T15:53:56 IST" duration-ms="7955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifySearcButton()[pri:2, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:53:56 IST" name="verifySearcButton" finished-at="2023-10-28T15:54:01 IST" duration-ms="4430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearcButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:54:01 IST" name="afterMethod" finished-at="2023-10-28T15:54:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearcButton status=SUCCESS method=VerifyForgottenPasswordPage.verifySearcButton()[pri:2, instance:tests.VerifyForgottenPasswordPage@359f7cdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObjects()[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:54:01 IST" name="clearObjects" finished-at="2023-10-28T15:54:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObjects -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:54:12 IST" name="closeBrowser" finished-at="2023-10-28T15:54:17 IST" duration-ms="4589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.VerifyForgottenPasswordPage@359f7cdf]" started-at="2023-10-28T15:54:28 IST" name="afterSuite" finished-at="2023-10-28T15:54:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.VerifyForgottenPasswordPage -->
      <class name="tests.VerifyLoginPage">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:51:42 IST" name="beforeSuite" finished-at="2023-10-28T15:51:42 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:53:10 IST" name="openBrowser" finished-at="2023-10-28T15:53:26 IST" duration-ms="16650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="createPomObject()[pri:0, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:53:26 IST" name="createPomObject" finished-at="2023-10-28T15:53:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPomObject -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:53:26 IST" name="goToLoginPage" finished-at="2023-10-28T15:53:34 IST" duration-ms="7676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingCorrectEmailOnly()[pri:0, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:53:34 IST" name="verifyTheLoginButtonByPassingCorrectEmailOnly" finished-at="2023-10-28T15:53:46 IST" duration-ms="11658" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //h2[@class="uiHeaderTitle"]
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-ADC0TJP', ip: '172.22.16.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 119.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20231019122658, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 12604, moz:profile: C:\Users\hp\AppData\Local\T..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 4e023360-6eea-42b3-bcb9-c0c679b45089
*** Element info: {Using=xpath, value=//h2[@class="uiHeaderTitle"]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //h2[@class="uiHeaderTitle"]
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-ADC0TJP', ip: '172.22.16.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 119.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20231019122658, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 12604, moz:profile: C:\Users\hp\AppData\Local\T..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 4e023360-6eea-42b3-bcb9-c0c679b45089
*** Element info: {Using=xpath, value=//h2[@class="uiHeaderTitle"]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy19.getText(Unknown Source)
at page.BlankPasswordPage.getBlankPasswordErrorTitle(BlankPasswordPage.java:23)
at tests.VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailOnly(VerifyLoginPage.java:107)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingCorrectEmailOnly -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:53:46 IST" name="afterMethod" finished-at="2023-10-28T15:53:46 IST" duration-ms="141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingCorrectEmailOnly status=FAILURE method=VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailOnly()[pri:0, instance:tests.VerifyLoginPage@1fa268de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:53:46 IST" name="goToLoginPage" finished-at="2023-10-28T15:53:47 IST" duration-ms="1415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingBlankEmailPassword()[pri:1, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:53:47 IST" name="verifyTheLoginButtonByPassingBlankEmailPassword" finished-at="2023-10-28T15:53:50 IST" duration-ms="2720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingBlankEmailPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:53:50 IST" name="afterMethod" finished-at="2023-10-28T15:53:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingBlankEmailPassword status=SUCCESS method=VerifyLoginPage.verifyTheLoginButtonByPassingBlankEmailPassword()[pri:1, instance:tests.VerifyLoginPage@1fa268de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:53:50 IST" name="goToLoginPage" finished-at="2023-10-28T15:53:52 IST" duration-ms="1695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingCorrectEmailPassword()[pri:2, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:53:52 IST" name="verifyTheLoginButtonByPassingCorrectEmailPassword" finished-at="2023-10-28T15:54:12 IST" duration-ms="20663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingCorrectEmailPassword -->
        <test-method is-config="true" signature="clearObjects()[pri:0, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:54:12 IST" name="clearObjects" finished-at="2023-10-28T15:54:12 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObjects -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:54:12 IST" name="afterMethod" finished-at="2023-10-28T15:54:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingCorrectEmailPassword status=SUCCESS method=VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailPassword()[pri:2, instance:tests.VerifyLoginPage@1fa268de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:54:17 IST" name="closeBrowser" finished-at="2023-10-28T15:54:28 IST" duration-ms="11208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.VerifyLoginPage@1fa268de]" started-at="2023-10-28T15:54:28 IST" name="afterSuite" finished-at="2023-10-28T15:54:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.VerifyLoginPage -->
    </test> <!-- FirefoxTest -->
  </suite> <!-- RegressionSuiteParallel-tests/classes -->
</testng-results>
