<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="18" passed="15" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-16T18:51:33 IST" name="RegressionSuiteParallel-tests/classes" finished-at="2023-10-16T18:54:50 IST" duration-ms="196553">
    <groups>
    </groups>
    <test started-at="2023-10-16T18:51:33 IST" name="ChromeTest" finished-at="2023-10-16T18:52:46 IST" duration-ms="72424">
      <class name="tests.VerifyForgottenPasswordPage">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:tests.VerifyForgottenPasswordPage@4ac3c60d]" started-at="2023-10-16T18:51:33 IST" name="openBrowser" finished-at="2023-10-16T18:51:37 IST" duration-ms="3444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="createPomObject()[pri:0, instance:tests.VerifyForgottenPasswordPage@4ac3c60d]" started-at="2023-10-16T18:51:42 IST" name="createPomObject" finished-at="2023-10-16T18:51:42 IST" duration-ms="156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPomObject -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@4ac3c60d]" started-at="2023-10-16T18:51:42 IST" name="goToForgottenPasswordPage" finished-at="2023-10-16T18:51:54 IST" duration-ms="11242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifyForgottenPasswordPageTitleMessage()[pri:0, instance:tests.VerifyForgottenPasswordPage@4ac3c60d]" started-at="2023-10-16T18:51:54 IST" name="verifyForgottenPasswordPageTitleMessage" finished-at="2023-10-16T18:51:54 IST" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgottenPasswordPageTitleMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@4ac3c60d]" started-at="2023-10-16T18:51:54 IST" name="afterMethod" finished-at="2023-10-16T18:51:54 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyForgottenPasswordPageTitleMessage status=SUCCESS method=VerifyForgottenPasswordPage.verifyForgottenPasswordPageTitleMessage()[pri:0, instance:tests.VerifyForgottenPasswordPage@4ac3c60d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@4ac3c60d]" started-at="2023-10-16T18:51:54 IST" name="goToForgottenPasswordPage" finished-at="2023-10-16T18:52:01 IST" duration-ms="6900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifyCancelButton()[pri:1, instance:tests.VerifyForgottenPasswordPage@4ac3c60d]" started-at="2023-10-16T18:52:01 IST" name="verifyCancelButton" finished-at="2023-10-16T18:52:06 IST" duration-ms="5372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@4ac3c60d]" started-at="2023-10-16T18:52:06 IST" name="afterMethod" finished-at="2023-10-16T18:52:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButton status=SUCCESS method=VerifyForgottenPasswordPage.verifyCancelButton()[pri:1, instance:tests.VerifyForgottenPasswordPage@4ac3c60d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@4ac3c60d]" started-at="2023-10-16T18:52:06 IST" name="goToForgottenPasswordPage" finished-at="2023-10-16T18:52:12 IST" duration-ms="6041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifySearcButton()[pri:2, instance:tests.VerifyForgottenPasswordPage@4ac3c60d]" started-at="2023-10-16T18:52:12 IST" name="verifySearcButton" finished-at="2023-10-16T18:52:16 IST" duration-ms="4178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearcButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@4ac3c60d]" started-at="2023-10-16T18:52:16 IST" name="afterMethod" finished-at="2023-10-16T18:52:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearcButton status=SUCCESS method=VerifyForgottenPasswordPage.verifySearcButton()[pri:2, instance:tests.VerifyForgottenPasswordPage@4ac3c60d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObjects()[pri:0, instance:tests.VerifyForgottenPasswordPage@4ac3c60d]" started-at="2023-10-16T18:52:16 IST" name="clearObjects" finished-at="2023-10-16T18:52:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObjects -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyForgottenPasswordPage@4ac3c60d]" started-at="2023-10-16T18:52:44 IST" name="closeBrowser" finished-at="2023-10-16T18:52:45 IST" duration-ms="702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.VerifyForgottenPasswordPage -->
      <class name="tests.VerifyLoginPage">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:tests.VerifyLoginPage@39529185]" started-at="2023-10-16T18:51:37 IST" name="openBrowser" finished-at="2023-10-16T18:51:42 IST" duration-ms="5615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="createPomObject()[pri:0, instance:tests.VerifyLoginPage@39529185]" started-at="2023-10-16T18:51:42 IST" name="createPomObject" finished-at="2023-10-16T18:51:42 IST" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPomObject -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@39529185]" started-at="2023-10-16T18:51:42 IST" name="goToLoginPage" finished-at="2023-10-16T18:51:46 IST" duration-ms="3649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingCorrectEmailOnly()[pri:0, instance:tests.VerifyLoginPage@39529185]" started-at="2023-10-16T18:51:46 IST" name="verifyTheLoginButtonByPassingCorrectEmailOnly" finished-at="2023-10-16T18:51:57 IST" duration-ms="11202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingCorrectEmailOnly -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@39529185]" started-at="2023-10-16T18:51:57 IST" name="afterMethod" finished-at="2023-10-16T18:51:57 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingCorrectEmailOnly status=SUCCESS method=VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailOnly()[pri:0, instance:tests.VerifyLoginPage@39529185] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@39529185]" started-at="2023-10-16T18:51:57 IST" name="goToLoginPage" finished-at="2023-10-16T18:51:58 IST" duration-ms="779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingBlankEmailPassword()[pri:1, instance:tests.VerifyLoginPage@39529185]" started-at="2023-10-16T18:51:58 IST" name="verifyTheLoginButtonByPassingBlankEmailPassword" finished-at="2023-10-16T18:52:00 IST" duration-ms="1899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingBlankEmailPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@39529185]" started-at="2023-10-16T18:52:00 IST" name="afterMethod" finished-at="2023-10-16T18:52:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingBlankEmailPassword status=SUCCESS method=VerifyLoginPage.verifyTheLoginButtonByPassingBlankEmailPassword()[pri:1, instance:tests.VerifyLoginPage@39529185] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@39529185]" started-at="2023-10-16T18:52:00 IST" name="goToLoginPage" finished-at="2023-10-16T18:52:01 IST" duration-ms="1168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingCorrectEmailPassword()[pri:2, instance:tests.VerifyLoginPage@39529185]" started-at="2023-10-16T18:52:01 IST" name="verifyTheLoginButtonByPassingCorrectEmailPassword" finished-at="2023-10-16T18:52:44 IST" duration-ms="42912" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: (//div[contains(@class,'x1rg5ohu x1n2onr6 x3ajldb')])[1]' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: (//div[contains(@class,'x1rg5ohu x1n2onr6 x3ajldb')])[1]' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at page.LoggedInHomePage.clickOnAccountLogo(LoggedInHomePage.java:34)
at tests.VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailPassword(VerifyLoginPage.java:135)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(@class,'x1rg5ohu x1n2onr6 x3ajldb')])[1]"}
  (Session info: chrome=117.0.5938.152)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-ADC0TJP', ip: '172.27.224.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 117.0.5938.152, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:59790}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7633f2501e8943faec1bc3c345d2972d
*** Element info: {Using=xpath, value=(//div[contains(@class,'x1rg5ohu x1n2onr6 x3ajldb')])[1]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy19.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:670)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:666)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingCorrectEmailPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@39529185]" started-at="2023-10-16T18:52:44 IST" name="afterMethod" finished-at="2023-10-16T18:52:44 IST" duration-ms="411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingCorrectEmailPassword status=FAILURE method=VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailPassword()[pri:2, instance:tests.VerifyLoginPage@39529185] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObjects()[pri:0, instance:tests.VerifyLoginPage@39529185]" started-at="2023-10-16T18:52:44 IST" name="clearObjects" finished-at="2023-10-16T18:52:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObjects -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyLoginPage@39529185]" started-at="2023-10-16T18:52:45 IST" name="closeBrowser" finished-at="2023-10-16T18:52:46 IST" duration-ms="333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.VerifyLoginPage -->
    </test> <!-- ChromeTest -->
    <test started-at="2023-10-16T18:51:33 IST" name="EdgeTest" finished-at="2023-10-16T18:53:39 IST" duration-ms="126148">
      <class name="tests.VerifyForgottenPasswordPage">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:tests.VerifyForgottenPasswordPage@6c80d78a]" started-at="2023-10-16T18:51:33 IST" name="openBrowser" finished-at="2023-10-16T18:51:40 IST" duration-ms="7010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="createPomObject()[pri:0, instance:tests.VerifyForgottenPasswordPage@6c80d78a]" started-at="2023-10-16T18:51:47 IST" name="createPomObject" finished-at="2023-10-16T18:51:47 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPomObject -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@6c80d78a]" started-at="2023-10-16T18:51:47 IST" name="goToForgottenPasswordPage" finished-at="2023-10-16T18:52:09 IST" duration-ms="22283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifyForgottenPasswordPageTitleMessage()[pri:0, instance:tests.VerifyForgottenPasswordPage@6c80d78a]" started-at="2023-10-16T18:52:09 IST" name="verifyForgottenPasswordPageTitleMessage" finished-at="2023-10-16T18:52:09 IST" duration-ms="95" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgottenPasswordPageTitleMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@6c80d78a]" started-at="2023-10-16T18:52:09 IST" name="afterMethod" finished-at="2023-10-16T18:52:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyForgottenPasswordPageTitleMessage status=SUCCESS method=VerifyForgottenPasswordPage.verifyForgottenPasswordPageTitleMessage()[pri:0, instance:tests.VerifyForgottenPasswordPage@6c80d78a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@6c80d78a]" started-at="2023-10-16T18:52:20 IST" name="goToForgottenPasswordPage" finished-at="2023-10-16T18:52:28 IST" duration-ms="8190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifyCancelButton()[pri:1, instance:tests.VerifyForgottenPasswordPage@6c80d78a]" started-at="2023-10-16T18:52:28 IST" name="verifyCancelButton" finished-at="2023-10-16T18:52:33 IST" duration-ms="5534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@6c80d78a]" started-at="2023-10-16T18:52:33 IST" name="afterMethod" finished-at="2023-10-16T18:52:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButton status=SUCCESS method=VerifyForgottenPasswordPage.verifyCancelButton()[pri:1, instance:tests.VerifyForgottenPasswordPage@6c80d78a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@6c80d78a]" started-at="2023-10-16T18:52:37 IST" name="goToForgottenPasswordPage" finished-at="2023-10-16T18:52:45 IST" duration-ms="8066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifySearcButton()[pri:2, instance:tests.VerifyForgottenPasswordPage@6c80d78a]" started-at="2023-10-16T18:52:45 IST" name="verifySearcButton" finished-at="2023-10-16T18:52:50 IST" duration-ms="4358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearcButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@6c80d78a]" started-at="2023-10-16T18:52:50 IST" name="afterMethod" finished-at="2023-10-16T18:52:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearcButton status=SUCCESS method=VerifyForgottenPasswordPage.verifySearcButton()[pri:2, instance:tests.VerifyForgottenPasswordPage@6c80d78a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObjects()[pri:0, instance:tests.VerifyForgottenPasswordPage@6c80d78a]" started-at="2023-10-16T18:52:50 IST" name="clearObjects" finished-at="2023-10-16T18:52:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObjects -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyForgottenPasswordPage@6c80d78a]" started-at="2023-10-16T18:53:37 IST" name="closeBrowser" finished-at="2023-10-16T18:53:38 IST" duration-ms="1880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.VerifyForgottenPasswordPage -->
      <class name="tests.VerifyLoginPage">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:tests.VerifyLoginPage@62150f9e]" started-at="2023-10-16T18:51:40 IST" name="openBrowser" finished-at="2023-10-16T18:51:47 IST" duration-ms="6721" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="createPomObject()[pri:0, instance:tests.VerifyLoginPage@62150f9e]" started-at="2023-10-16T18:52:09 IST" name="createPomObject" finished-at="2023-10-16T18:52:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPomObject -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@62150f9e]" started-at="2023-10-16T18:52:09 IST" name="goToLoginPage" finished-at="2023-10-16T18:52:12 IST" duration-ms="3148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingCorrectEmailOnly()[pri:0, instance:tests.VerifyLoginPage@62150f9e]" started-at="2023-10-16T18:52:12 IST" name="verifyTheLoginButtonByPassingCorrectEmailOnly" finished-at="2023-10-16T18:52:20 IST" duration-ms="7296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingCorrectEmailOnly -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@62150f9e]" started-at="2023-10-16T18:52:20 IST" name="afterMethod" finished-at="2023-10-16T18:52:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingCorrectEmailOnly status=SUCCESS method=VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailOnly()[pri:0, instance:tests.VerifyLoginPage@62150f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@62150f9e]" started-at="2023-10-16T18:52:33 IST" name="goToLoginPage" finished-at="2023-10-16T18:52:35 IST" duration-ms="1478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingBlankEmailPassword()[pri:1, instance:tests.VerifyLoginPage@62150f9e]" started-at="2023-10-16T18:52:35 IST" name="verifyTheLoginButtonByPassingBlankEmailPassword" finished-at="2023-10-16T18:52:37 IST" duration-ms="2279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingBlankEmailPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@62150f9e]" started-at="2023-10-16T18:52:37 IST" name="afterMethod" finished-at="2023-10-16T18:52:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingBlankEmailPassword status=SUCCESS method=VerifyLoginPage.verifyTheLoginButtonByPassingBlankEmailPassword()[pri:1, instance:tests.VerifyLoginPage@62150f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@62150f9e]" started-at="2023-10-16T18:52:50 IST" name="goToLoginPage" finished-at="2023-10-16T18:52:51 IST" duration-ms="1748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingCorrectEmailPassword()[pri:2, instance:tests.VerifyLoginPage@62150f9e]" started-at="2023-10-16T18:52:51 IST" name="verifyTheLoginButtonByPassingCorrectEmailPassword" finished-at="2023-10-16T18:53:36 IST" duration-ms="44337" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: (//div[contains(@class,'x1rg5ohu x1n2onr6 x3ajldb')])[1]' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: (//div[contains(@class,'x1rg5ohu x1n2onr6 x3ajldb')])[1]' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at page.LoggedInHomePage.clickOnAccountLogo(LoggedInHomePage.java:34)
at tests.VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailPassword(VerifyLoginPage.java:135)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(@class,'x1rg5ohu x1n2onr6 x3ajldb')])[1]"}
  (Session info: MicrosoftEdge=118.0.2088.46)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-ADC0TJP', ip: '172.27.224.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 118.0.2088.46, fedcm:accounts: true, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:59844}, msedge: {msedgedriverVersion: 117.0.2045.55 (50f62b8a7655..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f75b5ffe88477e80ae4c10122007ec63
*** Element info: {Using=xpath, value=(//div[contains(@class,'x1rg5ohu x1n2onr6 x3ajldb')])[1]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy19.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:670)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:666)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingCorrectEmailPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@62150f9e]" started-at="2023-10-16T18:53:36 IST" name="afterMethod" finished-at="2023-10-16T18:53:37 IST" duration-ms="868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingCorrectEmailPassword status=FAILURE method=VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailPassword()[pri:2, instance:tests.VerifyLoginPage@62150f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObjects()[pri:0, instance:tests.VerifyLoginPage@62150f9e]" started-at="2023-10-16T18:53:37 IST" name="clearObjects" finished-at="2023-10-16T18:53:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObjects -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyLoginPage@62150f9e]" started-at="2023-10-16T18:53:38 IST" name="closeBrowser" finished-at="2023-10-16T18:53:39 IST" duration-ms="827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.VerifyLoginPage -->
    </test> <!-- EdgeTest -->
    <test started-at="2023-10-16T18:52:46 IST" name="FirefoxTest" finished-at="2023-10-16T18:54:50 IST" duration-ms="124063">
      <class name="tests.VerifyForgottenPasswordPage">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:51:33 IST" name="beforeSuite" finished-at="2023-10-16T18:51:33 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:52:46 IST" name="openBrowser" finished-at="2023-10-16T18:52:55 IST" duration-ms="9368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="createPomObject()[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:53:05 IST" name="createPomObject" finished-at="2023-10-16T18:53:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPomObject -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:53:05 IST" name="goToForgottenPasswordPage" finished-at="2023-10-16T18:53:16 IST" duration-ms="11144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifyForgottenPasswordPageTitleMessage()[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:53:16 IST" name="verifyForgottenPasswordPageTitleMessage" finished-at="2023-10-16T18:53:16 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgottenPasswordPageTitleMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:53:16 IST" name="afterMethod" finished-at="2023-10-16T18:53:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyForgottenPasswordPageTitleMessage status=SUCCESS method=VerifyForgottenPasswordPage.verifyForgottenPasswordPageTitleMessage()[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:53:25 IST" name="goToForgottenPasswordPage" finished-at="2023-10-16T18:53:32 IST" duration-ms="6512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifyCancelButton()[pri:1, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:53:32 IST" name="verifyCancelButton" finished-at="2023-10-16T18:53:37 IST" duration-ms="4954" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:53:37 IST" name="afterMethod" finished-at="2023-10-16T18:53:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButton status=SUCCESS method=VerifyForgottenPasswordPage.verifyCancelButton()[pri:1, instance:tests.VerifyForgottenPasswordPage@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToForgottenPasswordPage()[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:53:41 IST" name="goToForgottenPasswordPage" finished-at="2023-10-16T18:53:49 IST" duration-ms="7125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToForgottenPasswordPage -->
        <test-method signature="verifySearcButton()[pri:2, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:53:49 IST" name="verifySearcButton" finished-at="2023-10-16T18:53:53 IST" duration-ms="4275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearcButton -->
        <test-method is-config="true" signature="clearObjects()[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:53:53 IST" name="clearObjects" finished-at="2023-10-16T18:53:53 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObjects -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:53:53 IST" name="afterMethod" finished-at="2023-10-16T18:53:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearcButton status=SUCCESS method=VerifyForgottenPasswordPage.verifySearcButton()[pri:2, instance:tests.VerifyForgottenPasswordPage@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:54:38 IST" name="closeBrowser" finished-at="2023-10-16T18:54:46 IST" duration-ms="7412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.VerifyForgottenPasswordPage@6dc17b83]" started-at="2023-10-16T18:54:50 IST" name="afterSuite" finished-at="2023-10-16T18:54:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.VerifyForgottenPasswordPage -->
      <class name="tests.VerifyLoginPage">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:51:33 IST" name="beforeSuite" finished-at="2023-10-16T18:51:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:52:55 IST" name="openBrowser" finished-at="2023-10-16T18:53:05 IST" duration-ms="10092" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="createPomObject()[pri:0, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:53:16 IST" name="createPomObject" finished-at="2023-10-16T18:53:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPomObject -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:53:16 IST" name="goToLoginPage" finished-at="2023-10-16T18:53:19 IST" duration-ms="2930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingCorrectEmailOnly()[pri:0, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:53:19 IST" name="verifyTheLoginButtonByPassingCorrectEmailOnly" finished-at="2023-10-16T18:53:25 IST" duration-ms="6242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingCorrectEmailOnly -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:53:25 IST" name="afterMethod" finished-at="2023-10-16T18:53:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingCorrectEmailOnly status=SUCCESS method=VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailOnly()[pri:0, instance:tests.VerifyLoginPage@5e0826e7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:53:37 IST" name="goToLoginPage" finished-at="2023-10-16T18:53:38 IST" duration-ms="1119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingBlankEmailPassword()[pri:1, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:53:38 IST" name="verifyTheLoginButtonByPassingBlankEmailPassword" finished-at="2023-10-16T18:53:41 IST" duration-ms="3462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingBlankEmailPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:53:41 IST" name="afterMethod" finished-at="2023-10-16T18:53:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingBlankEmailPassword status=SUCCESS method=VerifyLoginPage.verifyTheLoginButtonByPassingBlankEmailPassword()[pri:1, instance:tests.VerifyLoginPage@5e0826e7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goToLoginPage()[pri:0, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:53:53 IST" name="goToLoginPage" finished-at="2023-10-16T18:53:54 IST" duration-ms="900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPage -->
        <test-method signature="verifyTheLoginButtonByPassingCorrectEmailPassword()[pri:2, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:53:54 IST" name="verifyTheLoginButtonByPassingCorrectEmailPassword" finished-at="2023-10-16T18:54:38 IST" duration-ms="44366" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: (//div[contains(@class,'x1rg5ohu x1n2onr6 x3ajldb')])[1]' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: (//div[contains(@class,'x1rg5ohu x1n2onr6 x3ajldb')])[1]' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at page.LoggedInHomePage.clickOnAccountLogo(LoggedInHomePage.java:34)
at tests.VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailPassword(VerifyLoginPage.java:135)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: (//div[contains(@class,'x1rg5ohu x1n2onr6 x3ajldb')])[1]
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-ADC0TJP', ip: '172.27.224.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 118.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20231009140911, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18444, moz:profile: C:\Users\hp\AppData\Local\T..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: daf1d525-8524-4758-98a5-54969361a73b
*** Element info: {Using=xpath, value=(//div[contains(@class,'x1rg5ohu x1n2onr6 x3ajldb')])[1]}
at jdk.internal.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy19.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:670)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:666)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLoginButtonByPassingCorrectEmailPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:54:38 IST" name="afterMethod" finished-at="2023-10-16T18:54:38 IST" duration-ms="106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLoginButtonByPassingCorrectEmailPassword status=FAILURE method=VerifyLoginPage.verifyTheLoginButtonByPassingCorrectEmailPassword()[pri:2, instance:tests.VerifyLoginPage@5e0826e7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObjects()[pri:0, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:54:38 IST" name="clearObjects" finished-at="2023-10-16T18:54:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObjects -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:54:46 IST" name="closeBrowser" finished-at="2023-10-16T18:54:50 IST" duration-ms="3969" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.VerifyLoginPage@5e0826e7]" started-at="2023-10-16T18:54:50 IST" name="afterSuite" finished-at="2023-10-16T18:54:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.VerifyLoginPage -->
    </test> <!-- FirefoxTest -->
  </suite> <!-- RegressionSuiteParallel-tests/classes -->
</testng-results>
